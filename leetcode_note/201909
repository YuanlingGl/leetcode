--------------------
2019-9-21
今天开始恢复笔记
今日leetcode:
https://leetcode-cn.com/explore/interview/card/top-interview-questions-medium/29/array-and-strings/77/
字谜分组
给定一个字符串数组，将字母异位词组合在一起。字母异位词指字母相同，但排列不同的字符串。

示例:

输入: ["eat", "tea", "tan", "ate", "nat", "bat"],
输出:
[
  ["ate","eat","tea"],
  ["nat","tan"],
  ["bat"]
]
说明：
所有输入均为小写字母。
不考虑答案输出的顺序。
思路:因为字符串是无序的,最后要取出字母相同的字符串,直接比较看起来有点复杂,所以应该先设法让字符串变成有序的,再存入数组挨个遍历?(复杂度n²,可能会超时),字符串很明显是不会自己排序的,所以准备转化为char数组
实现:
toCharArray()+Arrays.sort()+String.valueOf()+map
--------------------
2019-9-22
偏头疼,少写一点
5197. 最小绝对差 显示英文描述 
用户通过次数931
用户尝试次数1014
通过次数947
提交次数1523
题目难度Easy
给你个整数数组 arr，其中每个元素都 不相同。

请你找到所有具有最小绝对差的元素对，并且按升序的顺序返回。

 

示例 1：

输入：arr = [4,2,1,3]
输出：[[1,2],[2,3],[3,4]]
示例 2：

输入：arr = [1,3,6,10,15]
输出：[[1,3]]
示例 3：

输入：arr = [3,8,-10,23,19,-4,-14,27]
输出：[[-14,-10],[19,23],[23,27]]
思路:因为看到每一对值都是两个,所以一下就想到了map的kv模式,但赛后参考带佬代码时候发现,似乎用数组更为妥帖
实现:Array.sort()+map.entrySet()
Entry就是将map中的一个kv对单独拉出来的对象
--------------------
2019-9-23
对昨天周赛的回顾,没必要引入过于复杂的数据结构,能用简单的处理就用简单的处理,除非必要的情况

给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:

输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。

这道题之前做过,没能第一时间想到方法有点不应该
思路:滑动窗口法

给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。

示例 1：

输入: "babad"
输出: "bab"
注意: "aba" 也是一个有效答案。
示例 2：

输入: "cbbd"
输出: "bb"

思路:遍历字符串,在每个字符处都执行一次寻找回文
--------------------
20190924

给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。



示例:

输入："23"
输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
说明:
尽管上面的答案是按字典序排列的，但是你可以任意选择答案输出的顺序。

思路:迭代,题解说的那个回溯没看明白,感觉迭代足以
--------------------
20190925

我佛了,今天做的啥玩意啊,这么简单道题被下套了

给定一个未排序的数组，判断这个数组中是否存在长度为 3 的递增子序列。

数学表达式如下:

    如果存在这样的 i, j, k,  且满足 0 ≤ i < j < k ≤ n-1，
    使得 arr[i] < arr[j] < arr[k] ，返回 true ; 否则返回 false 。

说明: 要求算法的时间复杂度为 O(n)，空间复杂度为 O(1) 。

示例 1:

输入: [1,2,3,4,5]
输出: true

示例 2:

输入: [5,4,3,2,1]
输出: false

思路:维持两个最小值,随着遍历数组更新,找到第三个符合条件的值就行了
--------------------
20190926

两数相加

给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0 开头。

示例：

输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807

思路:不太明确,大抵上就是挨个加,遇十进位变0
三元运算符?:
// 如果 a 等于 1 成立，则设置 b 为 20，否则为 30
b = (a == 1) ? 20 : 30;





